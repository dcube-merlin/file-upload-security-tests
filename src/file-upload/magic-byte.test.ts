/**
 * NOTE
 * The below unit tests are specific to magic-byte check. Unit tests for verifying file name, file size, file extension types are not included.
 */

import { FileSignatureValidator, FileFormats } from './magic-byte';

describe("Magic byte check", () => {
  test("should return true if valid jpeg file is received", () => {
    const validJpg = '/9j/4AAQSkZJRgABAQEAYABgAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcgSlBFRyB2NjIpLCBxdWFsaXR5ID0gOTAK/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwKDAwLCgsLDQ4SEA0OEQ4LCxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8AAEQgAAQABAwERAAIRAQMRAf/EABQAAQAAAAAAAAAAAAAAAAAAAAT/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEBAAAAAAAAAAAAAAAAAAAABv/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/ACDhA//Z';

    expect(FileSignatureValidator.validateBytes(validJpg, FileFormats.JPEG)).toBe(true);
  });

  test("should return false if jpeg file with invalid header is received", () => {
    const invalidJpgHeader = 'EZz/2P/gABBKRklGAAEBAQBgAGAAAP/+ADtDUkVBVE9SOiBnZC1qcGVnIHYxLjAgKHVzaW5nIElKRyBKUEVHIHY2MiksIHF1YWxpdHkgPSA5MAr/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAABAAEDAREAAhEBAxEB/8QAFAABAAAAAAAAAAAAAAAAAAAABP/EABQQAQAAAAAAAAAAAAAAAAAAAAD/xAAUAQEAAAAAAAAAAAAAAAAAAAAG/8QAFBEBAAAAAAAAAAAAAAAAAAAAAP/aAAwDAQACEQMRAD8AIOED/9k=';

    expect(FileSignatureValidator.validateBytes(invalidJpgHeader, FileFormats.JPEG)).toBe(false);
  });

  test("should return false if jpeg file with invalid trailer is received", () => {
    const invalidJpgTrailer = '/9j/4AAQSkZJRgABAQEAYABgAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcgSlBFRyB2NjIpLCBxdWFsaXR5ID0gOTAK/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwKDAwLCgsLDQ4SEA0OEQ4LCxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8AAEQgAAQABAwERAAIRAQMRAf/EABQAAQAAAAAAAAAAAAAAAAAAAAT/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEBAAAAAAAAAAAAAAAAAAAABv/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/ACDhA//Zqx4c4w==';

    expect(FileSignatureValidator.validateBytes(invalidJpgTrailer, FileFormats.JPEG)).toBe(false);
  });

  test("should return false if an invalid jpeg file with is received", () => {
    const pngFile = 'iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAIAAAACUFjqAAAACXBIWXMAAC4jAAAuIwF4pT92AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAALFJREFUeNpjsLGxxUSWllZWVtZABgOmnLW1jbm5GRDY2NgxYOiz1NfXmT59W03NZA0NZRRpc3NzW1v77OyapqZZaWllenraDMhyQGOrqiasXn0xNDReV1cTqJQBLgcElZX9K1eeS0rKNzTUh4gzQNwJdMjEieu2bLkbH58DtBtuJAPQQCMjg5qaScuWnUpMzEOWA0kDnQr0QHl5j79/ONxMhDQQ29ra6ehoGBjoAhlo0gBaLFRood8sewAAAABJRU5ErkJggg==';

    expect(FileSignatureValidator.validateBytes(pngFile, FileFormats.JPEG)).toBe(false);
  });

  //Add more tests for PDF file types
});